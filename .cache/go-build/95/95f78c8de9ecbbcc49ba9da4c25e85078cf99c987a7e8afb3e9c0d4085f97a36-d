// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/jamesonzeller/go/pkg/mod/github.com/wailsapp/wails/v3@v3.0.0-alpha.9/pkg/application/mainthread_darwin.go:1:1
//go:build darwin

package application

/*
#cgo CFLAGS: -mmacosx-version-min=10.13 -x objective-c
#cgo LDFLAGS: -framework Cocoa

#include "Cocoa/Cocoa.h"

extern void dispatchOnMainThreadCallback(unsigned int);

static void dispatchOnMainThread(unsigned int id) {
	dispatch_async(dispatch_get_main_queue(), ^{
		dispatchOnMainThreadCallback(id);
	});
}

static bool onMainThread() {
	return [NSThread isMainThread];
}

*/
import _ "unsafe"

func (m *macosApp) isOnMainThread() bool {
	return bool(( /*line :27:14*/_Cfunc_onMainThread /*line :27:27*/)())
}

func (m *macosApp) dispatchOnMainThread(id uint) {
	( /*line :31:2*/_Cfunc_dispatchOnMainThread /*line :31:23*/)( /*line :31:25*/_Ctype_uint /*line :31:31*/(id))
}

//export dispatchOnMainThreadCallback
func dispatchOnMainThreadCallback(callbackID  /*line :35:46*/_Ctype_uint /*line :35:52*/) {
	mainThreadFunctionStoreLock.RLock()
	id := uint(callbackID)
	fn := mainThreadFunctionStore[id]
	if fn == nil {
		Fatal("dispatchCallback called with invalid id: %v", id)
	}
	delete(mainThreadFunctionStore, id)
	mainThreadFunctionStoreLock.RUnlock()
	fn()
}
