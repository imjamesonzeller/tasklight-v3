// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function GetDataSourceDetail(dataSourceID: string): Promise<$models.NotionDataSourceDetail | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(27228208, dataSourceID) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetNotionDatabases(): Promise<$models.NotionDataSourceList | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(600908369) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType3($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetNotionWorkspaceId(): Promise<string> & { cancel(): void } {
    let $resultPromise = $Call.ByID(965567467) as any;
    return $resultPromise;
}

export function StartOAuth(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(301428963) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.NotionDataSourceDetail.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $models.NotionDataSourceList.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
